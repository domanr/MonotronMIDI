/**
 *  @fileOverview Grace
 */

/* need to use the CSL module to generate the CSL code */
var CSL = xdc.useModule('ti.mcu.msp430.csl.CSL');
var USCI_A0 = xdc.useModule('ti.mcu.msp430.csl.communication.USCI_A0');
var Timer0_A3 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer0_A3');
var WDTplus = xdc.useModule('ti.mcu.msp430.csl.watchdog.WDTplus');
var Timer1_A3 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer1_A3');
CSL.configApiVersion = "1.00.00";
var GPIO = xdc.useModule('ti.mcu.msp430.csl.gpio.GPIO');
var BCSplus = xdc.useModule('ti.mcu.msp430.csl.clock.BCSplus');
var System = xdc.useModule('ti.mcu.msp430.csl.system.System');

/* set stack and heap sizes as appropriate for MSP430 */
Program.sysStack = 0;
Program.stack = 64;
Program.heap = 0;
Program.argSize = 0;

/* Enable global interrupt */
System.srRegs.SR.GIE = System.srDefs.GIE;
BCSplus.userInputDCO = 8000.0;
CSL.device.vcc = 3.0;
USCI_A0.toggleButtonUART = true;
USCI_A0.showSelectionPage = false;
USCI_A0.uartRegs.UCA0CTL1.UCSSEL = USCI_A0.uartDefs.UCSSEL_2;
USCI_A0.rxIntHandlerOperatingModeOnExit = USCI_A0.KEEP;
USCI_A0.standardBaudRatesBasicViewUART = USCI_A0.BaudRate_Custom;
USCI_A0.standardBaudRatesPowerViewUART = USCI_A0.BaudRate_Custom;
USCI_A0.enableUserInputCustomBaudRate = true;
USCI_A0.userInputCustomBaudRateUart = "31250";
USCI_A0.uartRegs.UCA0BR1 = 1;
USCI_A0.usciUartPin[0] = 1;
GPIO.regs.P1SEL.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P1SEL2.Bit1 = GPIO.defs.BIT1;
USCI_A0.usciUartPin[1] = 1;
GPIO.regs.P1SEL.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P1SEL2.Bit2 = GPIO.defs.BIT2;
System.ie2Regs.IE2.UCA0RXIE = System.ie2Defs.UCA0RXIE;
USCI_A0.rxIntHandler = "UARTRxISR";
GPIO.regs.P1DIR.Bit0 = GPIO.defs.BIT0_OFF;
GPIO.regs.P1DIR.Bit6 = GPIO.defs.BIT6;
GPIO.regs.P1SEL.Bit6 = GPIO.defs.BIT6;
Timer0_A3.ccr0TimerSelection_BasicView = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_BasicView_Selection_2;
Timer0_A3.ccr0TimerSelection_PowerUser = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_PowerUser_Selection_1;
Timer0_A3.ccInputPin[0] = 0;
Timer0_A3.regs.TA0CTL.MC = Timer0_A3.defs.MC_1;
Timer0_A3.regs.TA0CCR0 = 255;
Timer0_A3.ccrOutputPin[0] = 0;
GPIO.regs.P1DIR.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P1SEL.Bit5 = GPIO.defs.BIT5_OFF;
Timer0_A3.ccrXTimerSelection_BasicView[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_1;
Timer0_A3.ccrXTimerSelection_PowerUser[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_PowerUser_Selection_1;
Timer0_A3.ccInputPin[2] = 0;
Timer0_A3.regs.TA0CCR1 = 127;
Timer0_A3.regs.TA0CCTL1.OUTMOD = Timer0_A3.defs.OUTMOD_7;
Timer0_A3.ccrOutputPin[1] = 2;
Timer0_A3.regs.TA0CTL.TASSEL = Timer0_A3.defs.TASSEL_2;
Timer0_A3.inputClockToTimer = 8000.0;
GPIO.regs.P1DIR.Bit7 = GPIO.defs.BIT7;
GPIO.regs.P2SEL.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P2SEL.Bit7 = GPIO.defs.BIT7_OFF;
GPIO.regs.P1REN.Bit3 = GPIO.defs.BIT3;
GPIO.regs.P1REN.Bit4 = GPIO.defs.BIT4;
GPIO.regs.P1REN.Bit5 = GPIO.defs.BIT5;
GPIO.regs.P2REN.Bit0 = GPIO.defs.BIT0;
GPIO.regs.P2REN.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P2REN.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P2REN.Bit3 = GPIO.defs.BIT3;
GPIO.regs.P2REN.Bit4 = GPIO.defs.BIT4;
GPIO.regs.P2REN.Bit5 = GPIO.defs.BIT5;
GPIO.regs.P2REN.Bit6 = GPIO.defs.BIT6;
GPIO.regs.P2REN.Bit7 = GPIO.defs.BIT7;
GPIO.regs.P1REN.Bit0 = GPIO.defs.BIT0;
WDTplus.regs.WDTCTL.WDTHOLD = WDTplus.defs.WDTHOLD;
WDTplus.regs.WDTCTL.WDTTMSEL = WDTplus.defs.WDTTMSEL_OFF;
WDTplus.regs.WDTCTL.WDTSSEL = WDTplus.defs.WDTSSEL;
WDTplus.regs.WDTCTL.WDTIS0 = WDTplus.defs.WDTIS0_OFF;
WDTplus.regs.WDTCTL.WDTIS1 = WDTplus.defs.WDTIS1_OFF;
Timer1_A3.ccr0TimerSelection_BasicView = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_BasicView_Selection_1;
Timer1_A3.ccr0TimerSelection_PowerUser = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_PowerUser_Selection_1;
Timer1_A3.ccInputPin[0] = 0;
Timer1_A3.regs.TA1CTL.MC = Timer1_A3.defs.MC_1;
Timer1_A3.regs.TA1CCR0 = 1499;
Timer1_A3.regs.TA1CTL.TASSEL = Timer1_A3.defs.TASSEL_1;
Timer1_A3.inputClockToTimer = 12.0;
Timer1_A3.regs.TA1CCTL0.CCIE = Timer1_A3.defs.CCIE;
Timer1_A3.ccr0InterruptHandler = "BPM_TimerHandler";
